{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","isDisabled","handleSubmit","event","preventDefault","validation","linkValidation","validImgUrl","validImdbUrl","props","addMovie","setState","settingInfo","target","name","value","replace","link","match","this","onSubmit","htmlFor","type","onChange","classNames","id","placeholder","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bb7fda9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    isDisabled: true,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, imgUrl, imdbUrl, imdbId } = this.state.movie;\n\n    const validation = this.linkValidation;\n\n    const validImgUrl = validation(imgUrl);\n    const validImdbUrl = validation(imdbUrl);\n\n    if (!title || !validImgUrl || !validImdbUrl || !imdbId) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          title: !title,\n          imgUrl: !validImgUrl,\n          imdbUrl: !validImdbUrl,\n          imdbId: !imdbId,\n        },\n      }));\n\n      return;\n    }\n\n    this.props.addMovie(this.state.movie);\n\n    this.setState({\n      movie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      isDisabled: true,\n    });\n  }\n\n  settingInfo = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      movie: {\n        ...state.movie,\n        [name]: value.replace(/\\s{2,}/g, ' '),\n      },\n      errors: {\n        ...state.errors,\n        [name]: false,\n      },\n      isDisabled: false,\n    }));\n  }\n\n  linkValidation = (link) => {\n    // eslint-disable-next-line\n    return link.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n  };\n\n  render() {\n    const { movie, errors, isDisabled } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h2 className=\"form__heading\">Add new film to collection:</h2>\n        <br />\n        <div className=\"form__field\">\n          <div className=\"field__element element\">\n            <label htmlFor=\"inputTitle\" className=\"text__input\">\n              Title:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={movie.title}\n              onChange={this.settingInfo}\n              className={classNames('element__input',\n                { 'element__input--invalid': errors.title })\n              }\n              id=\"inputTitle\"\n              placeholder=\"Type title here\"\n            />\n\n            {errors.title\n              // eslint-disable-next-line\n              && <span className=\"element__alert\">Please fill this section</span>}\n          </div>\n\n          <div className=\"field__element element\">\n            <label htmlFor=\"inputDescription\" className=\"text__input\">\n              Description:\n            </label>\n\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              value={movie.description}\n              onChange={this.settingInfo}\n              className=\"element__input\"\n              id=\"inputDescription\"\n              placeholder=\"Type description here\"\n            />\n          </div>\n\n          <div className=\"field__element element\">\n            <label htmlFor=\"inputImgUrl\" className=\"text__input\">\n              Image url:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              value={movie.imgUrl}\n              onChange={this.settingInfo}\n              className={classNames('element__input',\n                { 'element__input--invalid': errors.imgUrl })\n              }\n              id=\"inputImgUrl\"\n              placeholder=\"Type image url here\"\n            />\n\n            {errors.imgUrl\n              // eslint-disable-next-line\n              && <span className=\"element__alert\">Please correctly fill this section</span>}\n          </div>\n\n          <div className=\"field__element element\">\n            <label htmlFor=\"inputImdbUrl\" className=\"text__input\">\n              IMDb url:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              value={movie.imdbUrl}\n              onChange={this.settingInfo}\n              id=\"inputImdbUrl\"\n              className={classNames('element__input',\n                { 'element__input--invalid': errors.imdbUrl })\n              }\n              placeholder=\"Type IMDb url here\"\n            />\n\n            {errors.imdbUrl\n              // eslint-disable-next-line\n              && <span className=\"element__alert\">Please correctly fill this section</span>}\n          </div>\n\n          <div className=\"field__element element\">\n            <label htmlFor=\"inputImdbId\" className=\"text__input\">\n              IMDb ID:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              value={movie.imdbId}\n              onChange={this.settingInfo}\n              className={classNames('element__input',\n                { 'element__input--invalid': errors.imdbId })\n              }\n              id=\"inputImdbId\"\n              placeholder=\"Type IMDb ID here\"\n            />\n\n            {errors.imdbId\n              // eslint-disable-next-line\n              && <span className=\"element__alert\">Please fill this section</span>}\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"button\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}